source('~/lab9.R')
source('~/lab9.R')
View(table)
source('~/lab9.R')
source('~/lab9.R')
boxplot(table$fheight,table$sheight,main="Father-Son Diff",xlab="Father Hight",ylab="Son Hight")
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
source('~/lab9.R')
hist(table$sheight, main = "Distribution of son height", breaks=25)
source('~/lab9.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
setwd("C:\\Users\\Alpha\\Desktop\\Big Data project - NBA playoff predicition")
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
corrplot(correlationMatrix,
main="\n\nCorrelation Plot for independent variables",
method = "number",number.cex=0.75)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
View(randomForest.confusionMatrix)
View(randomForest.confusionMatrix)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
View(importantVariables)
View(importantVariables)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
decisionTree = rpart(Playoff~., method="class", data=training_set, na.action = na.pass)
plot(decisionTree)
text(decisionTree)
fancyRpartPlot(decisionTree,cex = 0.55)
predictDesicionTree = predict(object = decisionTree, newdata = testing_set, type = "class")
treeConfusionMatrix =  confusionMatrix(data = predictDesicionTree,reference = testing_set$Playoff)
decisionTreeAcuuracy = treeConfusionMatrix$overall['Accuracy']
print(decisionTree$finalModel)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
randomForest = randomForest(as.factor(training_set_scaled$Playoff) ~., data = training_set_scaled)
predictRandomForest = predict(randomForest, testing_set_scaled[,-25], type="prob")[,2]
binaryRandomForest = ifelse(predictRandomForest > 0.5,1,0)
randomForestAccuracy = mean(binaryRandomForest == testing_set_scaled$Playoff)
randomForest.confusionMatrix = randomForest$confusion
importantVariables = importance(randomForest)
importantVariables = importantVariables[order(meanDecreaseGini)]
View(importantVariables)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/newProject_NBA_Playoff_Prediction.R')
randomForest = randomForest(as.factor(training_set_scaled$Playoff) ~., data = training_set_scaled)
predictRandomForest = predict(randomForest, testing_set_scaled[,-25], type="prob")[,2]
binaryRandomForest = ifelse(predictRandomForest > 0.5,1,0)
randomForestAccuracy = mean(binaryRandomForest == testing_set_scaled$Playoff)
randomForest.confusionMatrix = randomForest$confusion
importantVariables = importance(randomForest)
importantVariables = importantVariables[order(meanDecreaseGini),]
varImpPlot(randomForest)
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
all_var_means <- colMeans(teams_been_in_playoff[,c(5,8,11,14,17,18,20:25)])
pct <- round(all_var_means/sum(all_var_means)*100)
lbls <- names(all_var_means)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie3D(all_var_means,labels=lbls,explode=0.1,main="Pie Chart of Teams in Playoffs Statistics Means ")
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/plots.R')
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
all_var_means <- colMeans(teams_been_in_playoff[,c(5,8,11,14,17,18,20:25)])
pct <- round(all_var_means/sum(all_var_means)*100)
lbls <- names(all_var_means)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie3D(all_var_means,labels=lbls,explode=0.1,main="Pie Chart of Teams in Playoffs Statistics Means ")
#avg points sorted
teams_mean_pts_all_seasons <- seasons %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teams_mean_pts_all_seasons$PTS <- round(teams_mean_pts_all_seasons$PTS,digits = 2)
avg_pts_plot <- ggplot(teams_mean_pts_all_seasons, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Avarage Points each team all seasons")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avg_pts_plot
number_of_playofs_per_team <- ggplot(seasons,aes(Team,Playoff)) +
geom_bar(aes(fill=Team),stat = "identity") +
ggtitle("Number Of Playoffs Per Team")  +
theme(plot.title = element_text(hjust = 0),legend.text=element_text(size=8)) +
theme(axis.title.x = element_blank()) +
theme(axis.text=element_text(size=9),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
number_of_playofs_per_team
teams_mean_pts_all_seasons <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teams_mean_pts_all_seasons$PTS <- round(teams_mean_pts_all_seasons$PTS,digits = 2)
avg_pts_plot <- ggplot(teams_mean_pts_all_seasons, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Avarage Points each team all seasons")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avg_pts_plot
#avg points sorted
teams_mean_pts_all_seasons <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teams_mean_pts_all_seasons$PTS <- round(teams_mean_pts_all_seasons$PTS,digits = 2)
avg_pts_plot <- ggplot(teams_mean_pts_all_seasons, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Avarage Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avg_pts_plot
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/NBA playoff prediction.R')
warnings()
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/NBA playoff prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/NBA playoff prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/NBA playoff prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/NBA playoff prediction.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/NBA playoff prediction.R')
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
eachTeamApp = 0
for (i in 1:nrow(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i]])
}
print(eachTeamApp)
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
eachTeamApp = 0
for (i in 1:30){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i]])
}
print(eachTeamApp)
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
eachTeamApp = 0
for (i in nrow(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
print(eachTeamApp)
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
View(teams_been_in_playoff)
for (i in nrow(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == 'Sacramento Kings',])
}
print(eachTeamApp)
eachTeamApp = 0
for (i in nrow(teamNames)){
eachTeamApp = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == 'Sacramento Kings',])
}
print(eachTeamApp)
eachTeamApp = 0
for (i in nrow(teamNames)){
eachTeamApp = (teams_been_in_playoff[teams_been_in_playoff$Team == 'Sacramento Kings',])
}
print(eachTeamApp)
eachTeamApp = (teams_been_in_playoff[teams_been_in_playoff$Team == 'Sacramento Kings',])
View(eachTeamApp)
eachTeamApp = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == 'Sacramento Kings',])
eachTeamApp = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == 'Sacramento Kings',])
print(eachTeamApp)
for (i in 1:nrow(teamNames)){
eachTeamApp = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
print(eachTeamApp)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
View(teams_been_in_playoff)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
# Teams been in Playoff statistics
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
# Teams been in Playoff statistics
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
#Average points of each team from all seasons made it to the playoffs round
teamMeanPoints <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Avarage Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
teamMeanPoints <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
for (i in 1:nrow(teamNames)){
eachTeamApp = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
print(eachTeamApp
print(nrow(teamNames))
print(nrow(teamNames))
print(length(teamNames))
for (i in 1:length(teamNames)){
eachTeamApp = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
print(eachTeamApp)
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
print(eachTeamApp)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
# Teams been in Playoff statistics
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
View(teams_been_in_playoff)
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
print(eachTeamApp)
pct <- round(eachTeamApp/sum(teams_been_in_playoff)*100)
lbls <- names(teamNames)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie3D(all_var_means,labels=lbls,explode=0.1,main="Pie Chart of Teams in Playoffs Statistics Means ")
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
View(teams_been_in_playoff)
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
pct <- round(eachTeamApp/sum(teams_been_in_playoff)*100)
lbls <- names(teamNames)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie3D(all_var_means,labels=lbls,explode=0.1,main="Pie Chart of Teams in Playoffs Statistics Means "
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
pct <- round(eachTeamApp/sum(teams_been_in_playoff)*100)
lbls <- names(teamNames)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie3D(all_var_means,labels=lbls,explode=0.1,main="Pie Chart of Teams in Playoffs Statistics Means ")
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
pct <- round(eachTeamApp/sum(teams_been_in_playoff)*100)
lbls <- names(teamNames)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie3D(eachTeamApp,labels=lbls,explode=0.1,main="Pie Chart of Teams in Playoffs Statistics Means ")
teamMeanPoints <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
teamMeanPoints <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Avarage Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
print(nrow(seasons$Rk == 1))
print(length(seasons$Rk == 1))
print(length(seasons$Rk == 1))
print(eachTeamApp)
# Teams been in Playoff statistics
teams_been_in_playoff <- seasons[seasons$Playoff == 1,]
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[teams_been_in_playoff$Team == teamNames[i],])
}
pct <- round((eachTeamApp/34)*100)
lbls <- names(teamNames)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie3D(eachTeamApp,labels=lbls,explode=0.1,main="Pie Chart of Teams in Playoffs Statistics Means ")
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(teams_been_in_playoff[season$Team == teamNames[i],])
}
print(eachTeamApp)
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(season[season$Team == teamNames[i],])
}
print(eachTeamApp)
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(season[season$Team == teamNames[i],])
print(eachTeamApp)
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(season[season$Team == teamNames[i],])
}
View(eachTeamApp)
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(season[season$Team == teamNames[i],])
}
print(eachTeamApp)
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(season[season$Team == teamNames[i],])
}
eachTeamApp = 0
for (i in 1:length(teamNames)){
eachTeamApp[i] = nrow(seasons[seasons$Team == teamNames[i],])
}
print(eachTeamApp)
numberOfPlayoffPerTeam <- seasons %>% group_by(Team) %>% summarise(Playoff = sum(Playoff),
numberOfSeasons = sum(Rk-Rk+1))
numberOfPlayoffPerTeam$PlayyoffPrecentage <- numberOfPlayoffPerTeam$Playoff/numberOfPlayoffPerTeam$numberOfSeasons *100
numberOfPlayoffPerTeam_plot <- ggplot(numberOfPlayoffPerTeam,aes(Team,PlayyoffPrecentage)) +
geom_bar(aes(fill=Team),stat = "identity") +
ggtitle("Precentage Of Playoffs Per Team")  +
theme(plot.title = element_text(hjust = 0),legend.text=element_text(size=8)) +
theme(axis.title.x = element_blank()) +
theme(axis.text=element_text(size=9),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
numberOfPlayoffPerTeam_plot
# Precentage of playoff appearances per team
numberOfPlayoffPerTeam <- seasons %>% group_by(Team) %>% summarise(Playoff = sum(Playoff),
numberOfSeasons = sum(Rk-Rk+1))
numberOfPlayoffPerTeam$PlayyoffPrecentage <- numberOfPlayoffPerTeam$Playoff/numberOfPlayoffPerTeam$numberOfSeasons *100
numberOfPlayoffPerTeam.Plot <- ggplot(numberOfPlayoffPerTeam,aes(Team,PlayyoffPrecentage)) +
geom_bar(aes(fill=Team),stat = "identity") +
ggtitle("Precentage Of Playoffs Per Team")  +
theme(plot.title = element_text(hjust = 0),legend.text=element_text(size=8)) +
theme(axis.title.x = element_blank()) +
theme(axis.text=element_text(size=9),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
numberOfPlayoffPerTeam.Plot
teamMeanPoints <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
teamMeanPoints <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
teamMeanPoints <- seasons %>% seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
#Average points of each team from all seasons made it to the playoffs round
teams_mean_pts_all_seasons <- seasons %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teams_mean_pts_all_seasons$PTS <- round(teams_mean_pts_all_seasons$PTS,digits = 2)
teams_mean_pts_all_seasons$PTS <- factor(teams_mean_pts_all_seasons$PTS,
levels = teams_mean_pts_all_seasons$PTS
[order(teams_mean_pts_all_seasons$Team)])
avg_pts_plot <- ggplot(teams_mean_pts_all_seasons, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Avarage Points each team all seasons")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avg_pts_plot
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
numberOfPlayoffPerTeam <- seasons %>% group_by(Team) %>% summarise(Playoff = sum(Playoff),
numberOfSeasons = sum(Rk-Rk+1))
numberOfPlayoffPerTeam$PlayyoffPrecentage <- numberOfPlayoffPerTeam$Playoff/numberOfPlayoffPerTeam$numberOfSeasons *100
numberOfPlayoffPerTeam.Plot <- ggplot(numberOfPlayoffPerTeam,aes(Team,PlayyoffPrecentage)) +
geom_bar(aes(fill=Team),stat = "identity") +
ggtitle("Precentage Of Playoffs Per Team")  +
theme(plot.title = element_text(hjust = 0),legend.text=element_text(size=8)) +
theme(axis.title.x = element_blank()) +
theme(axis.text=element_text(size=9),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
numberOfPlayoffPerTeam.Plot
teamMeanPoints <- seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
teamMeanPoints <- seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
avgPtsPlot
# Precentage of playoff appearances per team
numberOfPlayoffPerTeam <- seasons %>% group_by(Team) %>% summarise(Playoff = sum(Playoff),
numberOfSeasons = sum(Rk-Rk+1))
numberOfPlayoffPerTeam$PlayyoffPrecentage <- numberOfPlayoffPerTeam$Playoff/numberOfPlayoffPerTeam$numberOfSeasons *100
numberOfPlayoffPerTeam.Plot <- ggplot(numberOfPlayoffPerTeam,aes(Team,PlayyoffPrecentage)) +
geom_bar(aes(fill=Team),stat = "identity") +
ggtitle("Precentage Of Playoffs Per Team")  +
theme(plot.title = element_text(hjust = 0),legend.text=element_text(size=8)) +
theme(axis.title.x = element_blank()) +
theme(axis.text=element_text(size=9),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
numberOfPlayoffPerTeam.Plot
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
#Average points of each team from all seasons made it to the playoffs round
teamMeanPoints <- seasons[seasons$Playoff == 1,] %>% group_by(Team) %>% summarise(PTS = mean(PTS))
teamMeanPoints$PTS <- round(teamMeanPoints$PTS,digits = 2)
avgPtsPlot <- ggplot(teamMeanPoints, aes(x=Team, y=PTS)) +
geom_bar(aes(fill=Team),stat = "identity") +
scale_x_discrete()+ ggtitle("Average Points of each team made it to the playoff (all seasons)")  +
theme(plot.title = element_text(hjust = 0)) +
theme(axis.title.x = element_blank(),legend.text=element_text(size=8),legend.position="none") +
theme(axis.text=element_text(size=8),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
avgPtsPlot
# Precentage of playoff appearances per team
numberOfPlayoffPerTeam <- seasons %>% group_by(Team) %>% summarise(Playoff = sum(Playoff),
numberOfSeasons = sum(Rk-Rk+1))
numberOfPlayoffPerTeam$PlayyoffPrecentage <- numberOfPlayoffPerTeam$Playoff/numberOfPlayoffPerTeam$numberOfSeasons *100
numberOfPlayoffPerTeam.Plot <- ggplot(numberOfPlayoffPerTeam,aes(Team,PlayyoffPrecentage)) +
geom_bar(aes(fill=Team),stat = "identity") +
ggtitle("Precentage Of Playoffs Per Team")  +
theme(plot.title = element_text(hjust = 0),legend.text=element_text(size=8)) +
theme(axis.title.x = element_blank()) +
theme(axis.text=element_text(size=9),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
numberOfPlayoffPerTeam.Plot
source('C:/Users/Alpha/Desktop/Big Data project - NBA playoff predicition/Visualization.R')
# Precentage of playoff appearances per team
numberOfPlayoffPerTeam <- seasons %>% group_by(Team) %>% summarise(Playoff = sum(Playoff),
numberOfSeasons = sum(Rk-Rk+1))
numberOfPlayoffPerTeam$PlayyoffPrecentage <- (numberOfPlayoffPerTeam$Playoff/numberOfPlayoffPerTeam$numberOfSeasons)*100
numberOfPlayoffPerTeam.Plot <- ggplot(numberOfPlayoffPerTeam,aes(Team,PlayyoffPrecentage)) +
geom_bar(aes(fill=Team),stat = "identity") +
ggtitle("Precentage Of Playoffs Per Team")  +
theme(plot.title = element_text(hjust = 0),legend.text=element_text(size=8)) +
theme(axis.title.x = element_blank()) +
theme(axis.text=element_text(size=9),
axis.title=element_text(size=10,face="bold"))+
theme(axis.text.x = element_text(angle = 90, hjust = 1),legend.position="none")
numberOfPlayoffPerTeam.Plot
